function me_plot_init(){}function me_plot_station(e,t){me_plot(e,t)}function addData(e,t,a){e.data.labels.push(t),e.data.datasets.forEach(e=>{e.data.push(a)}),e.update()}const CHART_DS_BATT=0,CHART_COLOR_RED=0,CHART_COLOR_BLUE=1,CHART_COLOR_YELLOW=2,CHART_COLOR_GREEN=3,CHART_COLOR_BRIGHT_GREEN=4,CHART_COLOR_PURPLE=5,CHART_COLOR_ORANGE=6,CHART_COLOR_ORANGE1=7,CHART_COLOR_ORANGE2=8,CHART_COLOR_ORANGE3=9,CHART_COLOR_VIOLET=10,COLOR=["rgba(255, 99, 132,","rgba(54, 162, 235,","rgba(255, 206, 86,","rgba(75, 192, 192,","rgba(25, 212, 63,","rgba(153, 102, 255,","rgba(255, 159, 74,","rgba(255, 179, 84,","rgba(255, 199, 94,","rgba(255, 219, 104,","rgba(153, 172, 255,"];function getColor(e,t){return e<COLOR.length?(void 0===t&&(t=1),COLOR[e]+t+")"):"rgb(128,128,128)"}let width,height,gradient;function getGradient(e,t,a,r){const o=a.right-a.left,s=a.bottom-a.top;if(null===gradient||width!==o||height!==s){width=o,height=s,gradient=t.createLinearGradient(0,a.bottom,0,a.top);let n=100/e.chart.scales.y.max,i=.09*n,l=.1*n,d=.19*n,g=.2*n;gradient.addColorStop(0,getColor(CHART_COLOR_BRIGHT_GREEN,r)),gradient.addColorStop(i,getColor(CHART_COLOR_BRIGHT_GREEN,r)),gradient.addColorStop(l,getColor(CHART_COLOR_YELLOW,r)),gradient.addColorStop(d,getColor(CHART_COLOR_YELLOW,r)),gradient.addColorStop(g,getColor(CHART_COLOR_RED,r)),gradient.addColorStop(.99,getColor(CHART_COLOR_RED,r));let _=e.dataset.data[e.dataset.data.length-1];_<10?gradient.addColorStop(1,getColor(CHART_COLOR_BRIGHT_GREEN,r)):_<20?gradient.addColorStop(1,getColor(CHART_COLOR_YELLOW,r)):gradient.addColorStop(1,getColor(CHART_COLOR_RED,r))}return gradient}function getPMBorderGradient(e){const t=e.chart,{ctx:a,chartArea:r}=t;return r?getGradient(e,a,r,1):null}function getPMBorderGradientBG(e){const t=e.chart,{ctx:a,chartArea:r}=t;return r?getGradient(e,a,r,.5):null}function getLineColorData(e,t){return getColor(e<10?CHART_COLOR_BRIGHT_GREEN:e<20?CHART_COLOR_YELLOW:CHART_COLOR_RED,t)}const CHART_DATA={batt:{type:"line",labels:["battery level"],axisLabels:["millivolts (mv)"],positions:["left"],mins:[3e3],maxs:[4500],borderColors:[getColor(CHART_COLOR_RED)],backgroundColors:[getColor(CHART_COLOR_RED,.5)]},temp:{type:"line",labels:["temperature"],axisLabels:["Celsius (C)"],positions:["left"],mins:[-40],maxs:[80],borderColors:[getColor(3)],backgroundColors:[getColor(3,.5)]},pres:{type:"line",labels:["Pressure"],axisLabels:["Hectopascals (hPa)"],positions:["left"],mins:[850],maxs:[950],borderColors:[getColor(1)],backgroundColors:[getColor(1,.5)]},hum:{type:"line",labels:["Humidity"],axisLabels:["Relative Humidity (%)"],positions:["left"],mins:[0],maxs:[100],borderColors:[getColor(CHART_COLOR_YELLOW)],backgroundColors:[getColor(CHART_COLOR_YELLOW,.5)]},pm:{type:"line",labels:["PM 1.0","PM 2.5","PM 4.0","PM 10.0"],axisLabels:["ug/m3"],positions:["left"],mins:[0],maxs:[100],borderColors:[getPMBorderGradient,getPMBorderGradient,getPMBorderGradient,getPMBorderGradient],backgroundColors:[getPMBorderGradientBG,getPMBorderGradientBG,getPMBorderGradientBG,getPMBorderGradientBG]},link:{type:"line",labels:["RSSI","SNR"],axisLabels:["RSSI (dBm)","SNR"],positions:["left","right"],mins:[-140,-20],maxs:[0,10],borderColors:[getColor(5),getColor(10)],backgroundColors:[getColor(5,.5),getColor(10,.5)]},orient:{type:"line",labels:["x","y","z"],axisLabels:["milli-g"],positions:["left"],mins:[-1200],maxs:[1200],borderColors:[getColor(CHART_COLOR_RED),getColor(3),getColor(1)],backgroundColors:[getColor(CHART_COLOR_RED,.5),getColor(3,.5),getColor(1,.5)]}};function generateChart(e,t,a){let r="chart_"+e.replaceAll(" ","_"),o={labels:t,datasets:[]},s={x:{title:{display:!0,text:"Time"}}};const n=["y","y1","y2","y3","y4","y5","y6","y7"];let i=0;for(d in a){let e=a[d],t=CHART_DATA[e.type],r=0;for(let a in e.datasets){let l={label:t.labels[a],data:e.datasets[a],borderColor:t.borderColors[a],backgroundColor:t.backgroundColors[a],yAxisID:n[i],hidden:0!=d};o.datasets.push(l);let g={suggestedMin:t.mins[r],suggestedMax:t.maxs[r],display:0==d,title:{display:!0,text:t.axisLabels[r]},position:t.positions[r]};"y"!==n[i]&&(g.grid={drawOnChartArea:!1}),s[n[i]]=g,r+1<t.axisLabels.length&&(r++,i++)}i++}let l=document.getElementById(r).getContext("2d");new Chart(l,{type:"line",data:o,options:{plugins:{legend:{position:"top",onClick:function(e,t){var a=e.chart.data.datasets[t.datasetIndex].yAxisID;if("y"!==a){var r=e.chart.options.scales[a];r.display=!r.display}e.chart.data.datasets[t.datasetIndex].hidden=!e.chart.data.datasets[t.datasetIndex].hidden,e.chart.update()}},title:{display:!0,text:e}},scales:s}})}function generate_air_records(e,t){let a=document.getElementById("charts");a.innerHTML+='<canvas id="chart_Particle" ></canvas>',a.innerHTML+='<canvas id="chart_Temperature" ></canvas>',a.innerHTML+='<canvas id="chart_Pressure" ></canvas>',a.innerHTML+='<canvas id="chart_Humidity" ></canvas>',a.innerHTML+='<canvas id="chart_Battery_Level" ></canvas>',a.innerHTML+='<canvas id="chart_Link" ></canvas>',a.innerHTML+='<canvas id="chart_Orientation" ></canvas>';let r=e.head_rec_idx,o=e.rec_q,s=e.stream_id,n=e.num_rec,i=o.length,l=e.update_period_s/60;if(log_obj(e),console.log("air data"),0===i)return void(document.getElementById("stream_id").innerHTML="Stream ID: <b><i>no data</i></b>");let d=new Date;d.setTime(1e3*o[0].timestamp),console.log(o[0].timestamp+" "+d);const g=[],_=[],p=[],u=[],c=[],m=[],C=[],h=[],R=[],b=[],L=[],O=[],T=[],y=[];let H=0;n===i&&(H=r+1)===n&&(H=0),log("head: "+r+" tail: "+H);new Date(1e3*o[H].timestamp),new Date(1e3*o[r].timestamp);let A=(o[r].timestamp-o[H].timestamp)/3600,E=0,x=0,B=0;for(let t=0;t<n;++t){let a=H+t;a>=n&&(a-=n);let r=new Date(1e3*o[a].timestamp),[s,i,d,A]=r.toDateString().split(" "),G=r.toTimeString().split(" ");if(0===E)E=o[H].record_id,x=o[H].stream_id,B=o[H].timestamp;else{if(o[a].record_id>E+1||o[a].stream_id!=x){let e=o[a].record_id-E-1;o[a].stream_id!=x&&(e=(o[a].timestamp-B)/60/l,log("stream change: "+o[a].stream_id+" > "+x)),console.log("missing: "+e+" starting at "+(E+1)+" stream:"+o[a].stream_id);for(let t=0;t<e;t++)g.push("missing "),_.push(null),p.push(null),u.push(null),c.push(null),C.push(null),m.push(null),h.push(null),R.push(null),b.push(null),L.push(null),O.push(null),T.push(null),y.push(null)}E=o[a].record_id,x=o[a].stream_id,B=o[a].timestamp}let M=32&o[a].board.status;g.push([i+" "+d,G[0],o[a].record_id]),M&&0===o[a].chassis.particle.pm1_0_ug_m3&&0===o[a].chassis.particle.pm2_5_ug_m3&&0===o[a].chassis.particle.pm4_0_ug_m3&&0===o[a].chassis.particle.pm10_0_ug_m3?(h.push(null),R.push(null),b.push(null),L.push(null)):(h.push(o[a].chassis.particle.pm1_0_ug_m3),R.push(o[a].chassis.particle.pm2_5_ug_m3),b.push(o[a].chassis.particle.pm4_0_ug_m3),L.push(o[a].chassis.particle.pm10_0_ug_m3)),_.push(o[a].board.batt_mv),p.push(o[a].chassis.temperature_c),u.push(o[a].board.pressure_hpa),c.push(o[a].chassis.humidity_rh),C.push(o[a].board.rssi),m.push(o[a].board.snr),me_map_plot_record(e.account,o[a]),M&&0===o[a].board.orientation.x&&0===o[a].board.orientation.y&&0===o[a].board.orientation.z?(O.push(null),T.push(null),y.push(null)):(O.push(o[a].board.orientation.x),T.push(o[a].board.orientation.y),y.push(o[a].board.orientation.z))}document.getElementById("time_period").innerHTML="Time period: "+A.toFixed(1)+" hours";let G='Most recent: <span style="background-color:',M=getLastSeenSec({last_seen:o[r].timestamp})/60;G+=M<=l?'lightgreen">':M<=3*l?'yellow">':'red">',G+="&nbsp;"+getLastSeen({last_seen:o[r].timestamp}).description+"&nbsp;</span>",document.getElementById("last_seen").innerHTML=G,document.getElementById("interval").innerHTML="Interval: "+l+" minutes",document.getElementById("stream_id").innerHTML="Stream ID: "+s;CHART_DATA.pm;let f=R[R.length-1],D='<span style="background-color:'+(f<10?'lightgreen">':f<20?'yellow">':'red">')+"&nbsp;"+f+"&nbsp;</span> &mu;g/m<sup>3</sup>",v=p[p.length-1],I=(v=Number.parseFloat(v).toFixed(2))+" &deg;C",S=u[u.length-1],P=(S=Number.parseFloat(S).toFixed(2))+" hPa",k=c[c.length-1]+" %RH",N=_[_.length-1]+" mV";document.getElementById("last_data").innerHTML="Data Summary: "+D+" | "+I+" | "+P+" | "+k+" | "+N;let w=(new Date).toLocaleString();document.getElementById("page_generated").innerHTML="(Page generated: "+w+")";const Y={type:"batt",datasets:[_]},W={type:"pres",datasets:[u]},F={type:"hum",datasets:[c]},z={type:"link",datasets:[C,m]},U=[Y],V=[{type:"temp",datasets:[p]},W,F,Y],j=[W],q=[F],J=[z],K=[{type:"orient",datasets:[O,T,y]},z];generateChart("Particle",g,[{type:"pm",datasets:[h,R,b,L]}]),generateChart("Battery Level",g,U),generateChart("Temperature",g,V),generateChart("Pressure",g,j),generateChart("Humidity",g,q),generateChart("Link",g,J),generateChart("Orientation",g,K),zoomPoints(1)}function generate_datasets(e,t){let a=[];switch(log("generate data for "+e.account),me_lib_type(e.account)){case ME_TYPE_AIR:a=generate_air_records(e,t)}return a}function me_plot(e,t){document.getElementById("station_id").innerHTML="Station ID: scanning...";let a={};(a=t?me_lib_getDeviceDataNDay(e,t):me_lib_getDeviceData(e)).then(t=>{let a=t.account;void 0===a&&(a="<b>not found:</b> "+e),document.getElementById("station_id").innerHTML="Station ID: "+a;generate_datasets(t);console.log("gen data")})}