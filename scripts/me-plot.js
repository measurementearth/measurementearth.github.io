function me_plot_init(){}function me_plot_station(e){me_plot(e)}function addData(e,t,a){e.data.labels.push(t),e.data.datasets.forEach(e=>{e.data.push(a)}),e.update()}const CHART_DS_BATT=0,CHART_COLOR_RED=0,CHART_COLOR_BLUE=1,CHART_COLOR_YELLOW=2,CHART_COLOR_GREEN=3,CHART_COLOR_BRIGHT_GREEN=4,CHART_COLOR_PURPLE=5,CHART_COLOR_ORANGE=6,CHART_COLOR_ORANGE1=7,CHART_COLOR_ORANGE2=8,CHART_COLOR_ORANGE3=9,CHART_COLOR_VIOLET=10,COLOR=["rgba(255, 99, 132,","rgba(54, 162, 235,","rgba(255, 206, 86,","rgba(75, 192, 192,","rgba(25, 212, 63,","rgba(153, 102, 255,","rgba(255, 159, 74,","rgba(255, 179, 84,","rgba(255, 199, 94,","rgba(255, 219, 104,","rgba(153, 172, 255,"];function getColor(e,t){return e<COLOR.length?(void 0===t&&(t=1),COLOR[e]+t+")"):"rgb(128,128,128)"}let width,height,gradient;function getGradient(e,t,a,r){const o=a.right-a.left,n=a.bottom-a.top;if(null===gradient||width!==o||height!==n){width=o,height=n,gradient=t.createLinearGradient(0,a.bottom,0,a.top);let s=100/e.chart.scales.y.max,i=.09*s,l=.1*s,d=.19*s,g=.2*s;gradient.addColorStop(0,getColor(CHART_COLOR_BRIGHT_GREEN,r)),gradient.addColorStop(i,getColor(CHART_COLOR_BRIGHT_GREEN,r)),gradient.addColorStop(l,getColor(CHART_COLOR_YELLOW,r)),gradient.addColorStop(d,getColor(CHART_COLOR_YELLOW,r)),gradient.addColorStop(g,getColor(CHART_COLOR_RED,r)),gradient.addColorStop(.99,getColor(CHART_COLOR_RED,r));let _=e.dataset.data[e.dataset.data.length-1];_<10?gradient.addColorStop(1,getColor(CHART_COLOR_BRIGHT_GREEN,r)):_<20?gradient.addColorStop(1,getColor(CHART_COLOR_YELLOW,r)):gradient.addColorStop(1,getColor(CHART_COLOR_RED,r))}return gradient}function getPMBorderGradient(e){const t=e.chart,{ctx:a,chartArea:r}=t;return r?getGradient(e,a,r,1):null}function getPMBorderGradientBG(e){const t=e.chart,{ctx:a,chartArea:r}=t;return r?getGradient(e,a,r,.5):null}function getLineColorData(e,t){return getColor(e<10?CHART_COLOR_BRIGHT_GREEN:e<20?CHART_COLOR_YELLOW:CHART_COLOR_RED,t)}const CHART_DATA={batt:{type:"line",labels:["battery level"],axisLabels:["millivolts (mv)"],positions:["left"],mins:[3e3],maxs:[4500],borderColors:[getColor(CHART_COLOR_RED)],backgroundColors:[getColor(CHART_COLOR_RED,.5)]},temp:{type:"line",labels:["temperature"],axisLabels:["Celsius (C)"],positions:["left"],mins:[-40],maxs:[80],borderColors:[getColor(3)],backgroundColors:[getColor(3,.5)]},pres:{type:"line",labels:["Pressure"],axisLabels:["Hectopascals (hPa)"],positions:["left"],mins:[850],maxs:[950],borderColors:[getColor(1)],backgroundColors:[getColor(1,.5)]},hum:{type:"line",labels:["Humidity"],axisLabels:["Relative Humidity (%)"],positions:["left"],mins:[0],maxs:[100],borderColors:[getColor(CHART_COLOR_YELLOW)],backgroundColors:[getColor(CHART_COLOR_YELLOW,.5)]},pm:{type:"line",labels:["PM 1.0","PM 2.5","PM 4.0","PM 10.0"],axisLabels:["ug/m3"],positions:["left"],mins:[0],maxs:[100],borderColors:[getPMBorderGradient,getPMBorderGradient,getPMBorderGradient,getPMBorderGradient],backgroundColors:[getPMBorderGradientBG,getPMBorderGradientBG,getPMBorderGradientBG,getPMBorderGradientBG]},link:{type:"line",labels:["RSSI","SNR"],axisLabels:["RSSI (dBm)","SNR"],positions:["left","right"],mins:[-140,-20],maxs:[0,10],borderColors:[getColor(5),getColor(10)],backgroundColors:[getColor(5,.5),getColor(10,.5)]},orient:{type:"line",labels:["x","y","z"],axisLabels:["milli-g"],positions:["left"],mins:[-1200],maxs:[1200],borderColors:[getColor(CHART_COLOR_RED),getColor(3),getColor(1)],backgroundColors:[getColor(CHART_COLOR_RED,.5),getColor(3,.5),getColor(1,.5)]}};function generateChart(e,t,a,r){let o="chart_"+e.replaceAll(" ","_");var n=CHART_DATA[t];let s={labels:a,datasets:[]},i={x:{title:{display:!0,text:"Time"}}};const l=["y","y1","y2","y3"];let d=0;for(let e in r){console.log(" i, index "+e+" "+d+" "+r[e][0]);let t={label:n.labels[e],data:r[e],borderColor:n.borderColors[e],backgroundColor:n.backgroundColors[e],yAxisID:l[d]};s.datasets.push(t);let a={suggestedMin:n.mins[d],suggestedMax:n.maxs[d],display:!0,title:{display:!0,text:n.axisLabels[d]},position:n.positions[d]};"y"!==l[d]&&(a.grid={drawOnChartArea:!1}),i[l[d]]=a,d+1<n.axisLabels.length&&d++}var g=document.getElementById(o).getContext("2d");new Chart(g,{type:n.type,data:s,options:{plugins:{legend:{position:"top"},title:{display:!0,text:e}},scales:i}})}function processData(e,t){0}function generate_air_records(e,t){let a=document.getElementById("charts");a.innerHTML+='<canvas id="chart_Particle" ></canvas>',a.innerHTML+='<canvas id="chart_Temperature" ></canvas>',a.innerHTML+='<canvas id="chart_Pressure" ></canvas>',a.innerHTML+='<canvas id="chart_Humidity" ></canvas>',a.innerHTML+='<canvas id="chart_Battery_Level" ></canvas>',a.innerHTML+='<canvas id="chart_Link" ></canvas>',a.innerHTML+='<canvas id="chart_Orientation" ></canvas>';let r=e.head_rec_idx,o=e.rec_q,n=e.stream_id,s=e.num_rec,i=o.length,l=e.update_period_s/60;if(console.log("air data"),0===i)return void(document.getElementById("stream_id").innerHTML="Stream ID: <b><i>no data</i></b>");let d=new Date;d.setTime(1e3*o[0].timestamp),console.log(o[0].timestamp+" "+d);const g=[],_=[],u=[],p=[],C=[],c=[],m=[],h=[],R=[],L=[],O=[],b=[],T=[],H=[];let E=0;s===i&&(E=r+1)===s&&(E=0);new Date(1e3*o[E].timestamp),new Date(1e3*o[r].timestamp);let A=(o[r].timestamp-o[E].timestamp)/3600,y=0;for(let t=0;t<s;++t){let a=E+t;a>=s&&(a-=s);let r=new Date(1e3*o[a].timestamp),[n,i,l,d]=r.toDateString().split(" "),A=r.toTimeString().split(" ");if(0===y)y=o[E].record_id;else{if(o[a].record_id>y+1){let e=o[a].record_id-y-1;console.log("missing: "+e+" starting at "+(y+1));for(let t=0;t<e;t++)g.push("missing "),_.push(null),u.push(null),p.push(null),C.push(null),m.push(null),c.push(null),h.push(null),R.push(null),L.push(null),O.push(null),b.push(null),T.push(null),H.push(null)}y=o[a].record_id}let B=32&o[a].board.status;g.push([i+" "+l,A[0],o[a].record_id]),B&&0===o[a].chassis.particle.pm1_0_ug_m3&&0===o[a].chassis.particle.pm2_5_ug_m3&&0===o[a].chassis.particle.pm4_0_ug_m3&&0===o[a].chassis.particle.pm10_0_ug_m3?(h.push(null),R.push(null),L.push(null),O.push(null)):(h.push(o[a].chassis.particle.pm1_0_ug_m3),R.push(o[a].chassis.particle.pm2_5_ug_m3),L.push(o[a].chassis.particle.pm4_0_ug_m3),O.push(o[a].chassis.particle.pm10_0_ug_m3)),_.push(o[a].board.batt_mv),u.push(o[a].chassis.temperature_c),p.push(o[a].board.pressure_hpa),C.push(o[a].chassis.humidity_rh),m.push(o[a].board.rssi),c.push(o[a].board.snr),me_map_plot_record(e.account,o[a]),B&&0===o[a].board.orientation.x&&0===o[a].board.orientation.y&&0===o[a].board.orientation.z?(b.push(null),T.push(null),H.push(null)):(b.push(o[a].board.orientation.x),T.push(o[a].board.orientation.y),H.push(o[a].board.orientation.z))}document.getElementById("time_period").innerHTML="Time period: "+A.toFixed(1)+" hours";let B='Most recent: <span style="background-color:',G=getLastSeenSec({last_seen:o[r].timestamp})/60;B+=G<=l?'lightgreen">':G<=3*l?'yellow">':'red">',B+="&nbsp;"+getLastSeen({last_seen:o[r].timestamp})+"&nbsp;</span>",document.getElementById("last_seen").innerHTML=B,document.getElementById("interval").innerHTML="Interval: "+l+" minutes",document.getElementById("stream_id").innerHTML="Stream ID: "+n;let x=(new Date).toLocaleString();document.getElementById("page_generated").innerHTML="(Page generated: "+x+")",generateChart("Particle","pm",g,[h,R,L,O]),generateChart("Battery Level","batt",g,[_]),generateChart("Temperature","temp",g,[u]),generateChart("Pressure","pres",g,[p]),generateChart("Humidity","hum",g,[C]),generateChart("Link","link",g,[m,c]),generateChart("Orientation","orient",g,[b,T,H]),zoomPoints(1)}function generate_datasets(e,t){let a=[];switch(log("generate data for"+e.account),me_lib_type(e.account)){case ME_TYPE_AIR:a=generate_air_records(e,t)}return a}function me_plot(e){document.getElementById("station_id").innerHTML="Station ID: scanning...",me_lib_getDeviceData(e).then(t=>{let a=t.account;void 0===a&&(a="<b>not found:</b> "+e),document.getElementById("station_id").innerHTML="Station ID: "+a;generate_datasets(t);console.log("gen data")})}